{"ast":null,"code":"var _jsxFileName = \"/Users/sina/react/react-practice/react-quiz/src/component/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useReducer } from 'react';\nimport './../index.css';\nimport Header from './Header';\nimport Loader from './Loader';\nimport Error from './Error';\nimport Main from './Main';\nimport StartScreen from './StartScreen.component';\nimport Questions from './Questions.component';\nimport NextButton from './NextButton.component';\nimport ProgressBar from './ProgressBar.component';\nimport FinishScreen from './FinishScreen.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  status: 'loading',\n  questions: [],\n  index: 0,\n  answer: null,\n  points: 0\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'dataReceived':\n      return {\n        ...state,\n        questions: action.payLoad,\n        status: 'ready'\n      };\n    case 'dataFailed':\n      return {\n        ...state,\n        status: 'error'\n      };\n    case 'dataActive':\n      return {\n        ...state,\n        status: 'active'\n      };\n    case 'newAnswer':\n      const question = state.questions.at(state.index);\n      return {\n        ...state,\n        answer: action.payLoad,\n        points: action.payLoad === question.correctOption ? state.points + Number(question.points) : state.points\n      };\n    case 'nextQuestion':\n      return {\n        ...state,\n        index: state.index + 1,\n        answer: null\n      };\n    default:\n      throw new Error('Action unknown');\n  }\n}\nfunction App() {\n  _s();\n  const [{\n    status,\n    questions,\n    index,\n    answer,\n    points\n  }, dispatch] = useReducer(reducer, initialState);\n  const countQuest = questions.length;\n  const maxPoints = questions.reduce((prev, cur) => prev + cur.points, 0);\n  useEffect(() => {\n    fetch('http://localhost:8000/questions').then(res => res.json()).then(data => dispatch({\n      type: 'dataReceived',\n      payLoad: data\n    })).catch(error => dispatch({\n      type: 'dataFailed'\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: [status === 'loading' && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 34\n      }, this), status === 'error' && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 32\n      }, this), status === 'ready' && /*#__PURE__*/_jsxDEV(StartScreen, {\n        countQuest: countQuest,\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 32\n      }, this), status === 'active' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n          countQuest: countQuest,\n          index: index,\n          point: points,\n          maxPoints: maxPoints,\n          answer: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Questions, {\n          question: questions[index],\n          dispatch: dispatch,\n          answer: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n          answer: answer,\n          dispatch: dispatch,\n          index: index\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true), status === 'finished' && /*#__PURE__*/_jsxDEV(FinishScreen, {\n        points: points,\n        maxPoints: maxPoints\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BGyS4PfcEZDQaX5H0r4h6JRZ7ho=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useReducer","Header","Loader","Error","Main","StartScreen","Questions","NextButton","ProgressBar","FinishScreen","jsxDEV","_jsxDEV","Fragment","_Fragment","initialState","status","questions","index","answer","points","reducer","state","action","type","payLoad","question","at","correctOption","Number","App","_s","dispatch","countQuest","length","maxPoints","reduce","prev","cur","fetch","then","res","json","data","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","point","_c","$RefreshReg$"],"sources":["/Users/sina/react/react-practice/react-quiz/src/component/App.js"],"sourcesContent":["import { useEffect,useReducer } from 'react';\nimport './../index.css';\nimport Header from './Header'\nimport Loader from './Loader'\nimport Error from './Error'\nimport Main from './Main';\nimport StartScreen from './StartScreen.component';\nimport Questions from './Questions.component';\nimport NextButton from './NextButton.component';\nimport ProgressBar from './ProgressBar.component';\nimport FinishScreen from './FinishScreen.component';\n\nconst initialState = {\n  status: 'loading',\n  questions: [],\n  index: 0,\n  answer: null,\n  points:0\n}\nfunction reducer(state,action){\n  switch (action.type) {\n    case 'dataReceived':\n      return{\n        ...state,\n        questions: action.payLoad,\n        status: 'ready'\n      }\n    case 'dataFailed':\n      return{\n        ...state,\n        status: 'error'\n      }\n    case 'dataActive':\n      return{\n        ...state,\n        status: 'active'\n      }\n    case 'newAnswer':\n      const question = state.questions.at(state.index)\n      return{\n        ...state,\n        answer: action.payLoad,\n        points: action.payLoad === question.correctOption ? \n        state.points + Number(question.points): state.points\n      }\n    case 'nextQuestion':\n      return{\n        ...state,\n        index: state.index + 1,\n        answer: null\n      }\n    default:\n      throw new Error('Action unknown')\n  }\n}\n\nfunction App() {\n  const [{status,questions,index,answer,points}, dispatch] = useReducer(reducer,initialState)\n  const countQuest = questions.length\n  const maxPoints = questions.reduce((prev,cur)=>prev+cur.points,0)\n  useEffect(() => {\n     fetch('http://localhost:8000/questions')\n     .then(res=>res.json())\n     .then(data=>dispatch({type:'dataReceived',payLoad:data}))\n     .catch(error=>dispatch({type:'dataFailed'}))\n  }, [])\n  return (\n    <div className=\"app\">\n      <Header/>\n      <Main>\n        {status === 'loading' && <Loader/>}\n        {status === 'error' && <Error/> }\n        {status === 'ready' && <StartScreen countQuest={countQuest} dispatch={dispatch}/>}\n        {status === 'active' && \n        (<>\n        <ProgressBar \n        countQuest={countQuest} \n        index={index}\n        point={points}\n        maxPoints={maxPoints}\n        answer={answer}\n        />\n        <Questions  \n        question={questions[index]}\n        dispatch={dispatch}\n        answer={answer}\n        />\n        <NextButton\n        answer={answer}\n        dispatch={dispatch} \n        index={index}\n        />\n        </>)}\n        {status === 'finished' && <FinishScreen points={points} maxPoints={maxPoints} />}\n      </Main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}