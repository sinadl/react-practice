{"ast":null,"code":"var _jsxFileName = \"/Users/sina/react/react-practice/react-quiz/src/component/FinishScreen.component.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FinishScreen({\n  points,\n  maxPoints\n}) {\n  const percentage = points / maxPoints * 100;\n  let emoji;\n  if (percentage === 100) emoji = '🥇';\n  if (percentage >= 80 && percentage < 100) emoji = '🥈';\n  if (percentage >= 50 && percentage < 80) emoji = '🥉';\n  if (percentage >= 0 && percentage < 50) emoji = '🥹';\n  if (percentage === 0) emoji = '🧐';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [emoji, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), \"You scored \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: points\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 49\n      }, this), \" out of \", maxPoints, \" (\", Math.ceil(percentage), \"%)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"highscore\",\n      children: \"(Highscore: X points)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c = FinishScreen;\nvar _c;\n$RefreshReg$(_c, \"FinishScreen\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","FinishScreen","points","maxPoints","percentage","emoji","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Math","ceil","_c","$RefreshReg$"],"sources":["/Users/sina/react/react-practice/react-quiz/src/component/FinishScreen.component.js"],"sourcesContent":["import React from 'react'\n\nexport default function FinishScreen({points,maxPoints}) {\n    const percentage = (points/maxPoints) * 100;\n    let emoji;\n    if(percentage === 100) emoji = '🥇';\n    if(percentage >= 80 && percentage < 100) emoji = '🥈'\n    if(percentage >= 50 && percentage < 80) emoji = '🥉'\n    if(percentage >= 0 && percentage < 50) emoji = '🥹'\n    if(percentage === 0 ) emoji = '🧐'\n  return (\n    <>\n        <p className='result'>\n            <strong>{emoji} </strong>You scored <strong>{points}</strong> out of {maxPoints} (\n            {Math.ceil(percentage)}%)\n        </p>\n        <p className='highscore'>(Highscore: X points)</p>\n    </>\n  )\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzB,eAAe,SAASC,YAAYA,CAAC;EAACC,MAAM;EAACC;AAAS,CAAC,EAAE;EACrD,MAAMC,UAAU,GAAIF,MAAM,GAACC,SAAS,GAAI,GAAG;EAC3C,IAAIE,KAAK;EACT,IAAGD,UAAU,KAAK,GAAG,EAAEC,KAAK,GAAG,IAAI;EACnC,IAAGD,UAAU,IAAI,EAAE,IAAIA,UAAU,GAAG,GAAG,EAAEC,KAAK,GAAG,IAAI;EACrD,IAAGD,UAAU,IAAI,EAAE,IAAIA,UAAU,GAAG,EAAE,EAAEC,KAAK,GAAG,IAAI;EACpD,IAAGD,UAAU,IAAI,CAAC,IAAIA,UAAU,GAAG,EAAE,EAAEC,KAAK,GAAG,IAAI;EACnD,IAAGD,UAAU,KAAK,CAAC,EAAGC,KAAK,GAAG,IAAI;EACpC,oBACEP,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACIR,OAAA;MAAGS,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACjBR,OAAA;QAAAQ,QAAA,GAASD,KAAK,EAAC,GAAC;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAAW,eAAAb,OAAA;QAAAQ,QAAA,EAASJ;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,YAAQ,EAACR,SAAS,EAAC,IAChF,EAACS,IAAI,CAACC,IAAI,CAACT,UAAU,CAAC,EAAC,IAC3B;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACJb,OAAA;MAAGS,SAAS,EAAC,WAAW;MAAAD,QAAA,EAAC;IAAqB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA,eACpD,CAAC;AAEP;AAACG,EAAA,GAjBuBb,YAAY;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}